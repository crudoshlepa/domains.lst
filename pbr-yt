#!/bin/sh /etc/rc.common

START=99

start () {
    OUTPUT_FILE="/tmp/dnsmasq.d/youtube.lst"
    > "$OUTPUT_FILE"

    DOMAINS_URLS="
        https://raw.githubusercontent.com/antonme/ipnames/refs/heads/master/dns-youtube.txt
        https://raw.githubusercontent.com/GhostRooter0953/discord-voice-ips/refs/heads/master/voice_domains/discord-voice-domains-list
        https://raw.githubusercontent.com/GhostRooter0953/discord-voice-ips/refs/heads/master/main_domains/discord-main-domains-list
    "

    RAW_DOMAIN_CONTENT_ACCUMULATOR=""

    NFT_FAMILY="inet"
    NFT_TABLE="fw4"
    NFT_SET="youtube_domains"

    for DOMAIN_SINGLE_URL in $DOMAINS_URLS; do
        echo "Downloading domain list from $DOMAIN_SINGLE_URL..."
        CURRENT_DOMAIN_DOWNLOAD=$(curl -sSL "$DOMAIN_SINGLE_URL")
        CURL_EXIT_CODE=$?

        if [ "$CURL_EXIT_CODE" -ne 0 ]; then
            echo "Warning: curl failed to download from $DOMAIN_SINGLE_URL (exit code: $CURL_EXIT_CODE). Skipping this URL."
        elif [ -n "$CURRENT_DOMAIN_DOWNLOAD" ]; then
            RAW_DOMAIN_CONTENT_ACCUMULATOR="${RAW_DOMAIN_CONTENT_ACCUMULATOR}${CURRENT_DOMAIN_DOWNLOAD}"$'\n'
        else
            echo "Warning: Downloaded content from $DOMAIN_SINGLE_URL is empty."
        fi
    done

    PROCESSED_DOMAINS_FOR_FILE=""
    if [ -n "$RAW_DOMAIN_CONTENT_ACCUMULATOR" ]; then
        while IFS= read -r line || [ -n "$line" ]; do
            trimmed_line=$(echo "$line" | awk '{$1=$1};1')
            if [ -n "$trimmed_line" ]; then
                PROCESSED_DOMAINS_FOR_FILE="${PROCESSED_DOMAINS_FOR_FILE}nftset=/${trimmed_line}/4#${NFT_FAMILY}#${NFT_TABLE}#${NFT_SET}"$'\n'
            fi
        done <<EOF
$(echo "$RAW_DOMAIN_CONTENT_ACCUMULATOR" | awk 'NF')
EOF
    fi

    if [ -z "$PROCESSED_DOMAINS_FOR_FILE" ]; then
        echo "Warning: No domain content was successfully downloaded and processed. Output file ($OUTPUT_FILE) will be empty."
    fi

    printf "%s" "$PROCESSED_DOMAINS_FOR_FILE" > "$OUTPUT_FILE"

    if dnsmasq --conf-file="$OUTPUT_FILE" --test 2>&1 | grep -q "syntax check OK"; then
        /etc/init.d/dnsmasq restart
    fi

    CIDR_URLS="
        https://raw.githubusercontent.com/touhidurrr/iplist-youtube/refs/heads/main/lists/cidr4.txt
    "

    RAW_CIDR_CONTENT_ACCUMULATOR=""

    for CIDR_SINGLE_URL in $CIDR_URLS; do
        echo "Downloading CIDR list from $CIDR_SINGLE_URL..."
        CURRENT_CIDR_DOWNLOAD=$(curl -sSL "$CIDR_SINGLE_URL")
        CURL_EXIT_CODE=$?

        if [ "$CURL_EXIT_CODE" -ne 0 ]; then
          echo "Error: curl failed to download from $CIDR_SINGLE_URL (exit code: $CURL_EXIT_CODE)."
          exit 1
        fi

        if [ -n "$CURRENT_CIDR_DOWNLOAD" ]; then
            RAW_CIDR_CONTENT_ACCUMULATOR="${RAW_CIDR_CONTENT_ACCUMULATOR}${CURRENT_CIDR_DOWNLOAD}"$'\n'
        else
            echo "Warning: Downloaded content from $CIDR_SINGLE_URL is empty."
        fi
    done

    CIDR_CONTENT=$(echo "$RAW_CIDR_CONTENT_ACCUMULATOR" | awk 'NF')

    if [ -z "$CIDR_CONTENT" ]; then
      echo "Error: All downloaded CIDR lists resulted in no valid content."
      exit 1
    fi

    total_lines=$(echo "$CIDR_CONTENT" | wc -l | awk '{print $1}')

    if ! [[ "$total_lines" =~ ^[0-9]+$ ]] || [ "$total_lines" -le 0 ]; then
        echo "Error: Could not count lines or downloaded content seems effectively empty (total_lines: $total_lines)."
        exit 1
    fi

    ELEMENTS_STRING=$(echo "$CIDR_CONTENT" | awk -v total="$total_lines" '{
      printf "%s", $0;
      if (NR < total) {
        printf ", ";
      }
    }')

    echo "Adding elements to nft set: $NFT_FAMILY/$NFT_TABLE/$NFT_SET..."
    nft add element "$NFT_FAMILY" "$NFT_TABLE" "$NFT_SET" "{ $ELEMENTS_STRING }"
    NFT_EXIT_CODE=$?

    if [ "$NFT_EXIT_CODE" -ne 0 ]; then
      echo "Error: nft add element command failed (exit code: $NFT_EXIT_CODE)."
      exit 1
    fi
}
